# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SubDepartment {
  id: ID!
  name: String!
  department: Department
}

type Department {
  id: ID!
  name: String!
  subDepartments: [SubDepartment!]
}

type PaginatedDepartments {
  departments: [Department!]!
  total: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
}

type User {
  id: ID!
  username: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserType {
  id: Float!
  username: String!
}

type LoginResponse {
  access_token: String!
  user: UserType!
}

type Query {
  GetDepartments(page: Int = 1, limit: Int = 10): PaginatedDepartments!
  getUserByUsername(username: String!): User
  GetAllUsers: [User!]!
}

type Mutation {
  CreateDepartment(input: CreateDepartmentInput!): Department!
  UpdateDepartment(input: UpdateDepartmentInput!): Department!
  DeleteDepartment(id: Int!): Boolean!
  UpdateSubDepartment(id: Int!, name: String!): SubDepartment!
  DeleteSubDepartment(id: Int!, subDepartmentId: Int!): Boolean!
  AddSubDepartment(departmentId: Int!, name: String!): SubDepartment!
  RegisterUser(input: CreateUserInput!): User!
  Login(username: String!, password: String!): LoginResponse!
}

input CreateDepartmentInput {
  name: String!
  subDepartments: [CreateSubDepartmentInput!]
}

input CreateSubDepartmentInput {
  id: Int
  name: String!
}

input UpdateDepartmentInput {
  name: String
  subDepartments: [CreateSubDepartmentInput!]
  id: Int!
}

input CreateUserInput {
  username: String!
  password: String!
}